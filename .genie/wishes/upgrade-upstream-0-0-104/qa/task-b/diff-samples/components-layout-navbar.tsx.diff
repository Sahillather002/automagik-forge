--- /tmp/upstream_temp.txt	2025-10-07 14:46:31.351747558 -0300
+++ forge-overrides/frontend/src/components/layout/navbar.tsx	2025-10-07 14:43:25.280987843 -0300
@@ -1,6 +1,5 @@
 import { Link, useLocation } from 'react-router-dom';
-import { useCallback, useEffect, useState } from 'react';
-import { siDiscord } from 'simple-icons';
+import { useCallback } from 'react';
 import { Button } from '@/components/ui/button';
 import {
   DropdownMenu,
@@ -14,7 +13,6 @@
   Settings,
   BookOpen,
   MessageCircleQuestion,
-  MessageCircle,
   Menu,
   Plus,
 } from 'lucide-react';
@@ -26,8 +24,6 @@
 import { showProjectForm } from '@/lib/modals';
 import { useOpenProjectInEditor } from '@/hooks/useOpenProjectInEditor';
 
-const DISCORD_GUILD_ID = '1423630976524877857';
-
 const INTERNAL_NAV = [
   { label: 'Projects', icon: FolderOpen, to: '/projects' },
   { label: 'Settings', icon: Settings, to: '/settings' },
@@ -37,17 +33,12 @@
   {
     label: 'Docs',
     icon: BookOpen,
-    href: 'https://vibekanban.com/docs',
+    href: 'https://forge.automag.ik/',
   },
   {
     label: 'Support',
     icon: MessageCircleQuestion,
-    href: 'https://github.com/BloopAI/vibe-kanban/issues',
-  },
-  {
-    label: 'Discord',
-    icon: MessageCircle,
-    href: 'https://discord.gg/AC4nwVtJM3',
+    href: 'https://github.com/namastexlabs/automagik-forge/issues',
   },
 ];
 
@@ -56,36 +47,6 @@
   const { projectId, project } = useProject();
   const { query, setQuery, active, clear, registerInputRef } = useSearch();
   const handleOpenInEditor = useOpenProjectInEditor(project || null);
-  const [onlineCount, setOnlineCount] = useState<number | null>(null);
-
-  useEffect(() => {
-    let cancelled = false;
-
-    const fetchCount = async () => {
-      try {
-        const res = await fetch(
-          `https://discord.com/api/guilds/${DISCORD_GUILD_ID}/widget.json`,
-          { cache: 'no-store' }
-        );
-        if (!res.ok) return; // Widget disabled or temporary error; keep previous value
-        const data = await res.json();
-        if (!cancelled && typeof data?.presence_count === 'number') {
-          setOnlineCount(data.presence_count);
-        }
-      } catch {
-        // Network error; ignore and keep previous value
-      }
-    };
-
-    // Initial fetch + refresh every 60s
-    fetchCount();
-    const interval = setInterval(fetchCount, 60_000);
-
-    return () => {
-      cancelled = true;
-      clearInterval(interval);
-    };
-  }, []);
 
   const setSearchBarRef = useCallback(
     (node: HTMLInputElement | null) => {
@@ -117,36 +78,10 @@
     <div className="border-b bg-background">
       <div className="w-full px-3">
         <div className="flex items-center h-12 py-2">
-          <div className="flex-1 flex items-center">
+          <div className="flex-1">
             <Link to="/projects">
               <Logo />
             </Link>
-            <a
-              href="https://discord.gg/AC4nwVtJM3"
-              target="_blank"
-              rel="noopener noreferrer"
-              aria-label="Join our Discord"
-              className="hidden sm:inline-flex items-center ml-3 text-xs font-medium overflow-hidden border h-6"
-            >
-              <span className="bg-muted text-foreground flex items-center p-2 border-r">
-                <svg
-                  className="h-4 w-4"
-                  viewBox="0 0 24 24"
-                  fill="currentColor"
-                  aria-hidden="true"
-                >
-                  <path d={siDiscord.path} />
-                </svg>
-              </span>
-              <span
-                className=" h-full items-center flex p-2"
-                aria-live="polite"
-              >
-                {onlineCount !== null
-                  ? `${onlineCount.toLocaleString()} online`
-                  : 'online'}
-              </span>
-            </a>
           </div>
 
           <SearchBar
@@ -201,13 +136,13 @@
 
               <DropdownMenuContent align="end">
                 {INTERNAL_NAV.map((item) => {
-                  const active = location.pathname.startsWith(item.to);
+                  const activeItem = location.pathname.startsWith(item.to);
                   const Icon = item.icon;
                   return (
                     <DropdownMenuItem
                       key={item.to}
                       asChild
-                      className={active ? 'bg-accent' : ''}
+                      className={activeItem ? 'bg-accent' : ''}
                     >
                       <Link to={item.to}>
                         <Icon className="mr-2 h-4 w-4" />
@@ -223,11 +158,7 @@
                   const Icon = item.icon;
                   return (
                     <DropdownMenuItem key={item.href} asChild>
-                      <a
-                        href={item.href}
-                        target="_blank"
-                        rel="noopener noreferrer"
-                      >
+                      <a href={item.href} target="_blank" rel="noopener noreferrer">
                         <Icon className="mr-2 h-4 w-4" />
                         {item.label}
                       </a>
