Override Audit Priority Summary
Generated: 2025-10-07 14:46 UTC
Upstream Version: v0.0.104-20251006165551

STATISTICS
==========
Total Override Files: 25
  - Has Upstream Equivalent: 19
  - Forge-Specific: 6

Priority Breakdown:
  - HIGH: 8 files (32%)
  - MEDIUM: 1 file (4%)
  - LOW: 16 files (64%)

HIGH PRIORITY FILES (8)
=======================
These require careful refactoring from upstream base with Forge customizations layered on top.

1. components/dialogs/auth/GitHubLoginDialog.tsx
   - Has upstream equivalent
   - Customizations: Branding
   - Diff: 24 lines
   - Action: Copy upstream + layer Forge branding + test modal flow

2. components/layout/navbar.tsx
   - Has upstream equivalent
   - Customizations: Branding, Repository links, Discord guild ID
   - Diff: 151 lines
   - Action: Copy upstream + add Forge links + update Discord guild to 1095114867012292758

3. pages/settings/GeneralSettings.tsx
   - Has upstream equivalent
   - Customizations: forge-api integration, Omni integration
   - Diff: 86 lines
   - Action: Copy upstream + layer forge-api + OmniCard + test button patterns

4. components/omni/OmniCard.tsx [Forge-specific]
   - No upstream equivalent
   - Customizations: Omni integration
   - Action: Verify compatibility, lint + type-check only

5. components/omni/OmniModal.tsx [Forge-specific]
   - No upstream equivalent
   - Customizations: Omni integration
   - Action: Verify compatibility, lint + type-check only

6. lib/forge-api.ts [Forge-specific]
   - No upstream equivalent
   - Customizations: forge-api, Omni integration
   - Action: Verify API client patterns, lint + type-check only

7. components/omni/api.ts [Forge-specific]
   - No upstream equivalent
   - Customizations: Omni integration
   - Action: Verify compatibility, lint + type-check only

8. components/omni/types.ts [Forge-specific]
   - No upstream equivalent
   - Customizations: Omni integration
   - Action: Verify type compatibility, lint + type-check only

MEDIUM PRIORITY FILES (1)
==========================
1. types/shims.d.ts [Forge-specific]
   - No upstream equivalent
   - Action: Verify type declarations compatible with upstream

LOW PRIORITY FILES (16)
========================
All have minimal Forge customizations (primarily branding).
Simple compare + update approach sufficient.

- components/dialogs/global/DisclaimerDialog.tsx (56 lines diff)
- components/dialogs/global/OnboardingDialog.tsx (11 lines diff)
- components/dialogs/global/PrivacyOptInDialog.tsx (22 lines diff)
- components/dialogs/global/ReleaseNotesDialog.tsx (20 lines diff)
- components/dialogs/index.ts (106 lines diff)
- components/dialogs/tasks/CreatePRDialog.tsx (11 lines diff)
- components/logo.tsx (53 lines diff)
- components/tasks/TaskDetails/PreviewTab.tsx (26 lines diff)
- components/tasks/TaskDetails/preview/NoServerContent.tsx (11 lines diff)
- main.tsx (41 lines diff)
- pages/settings/AgentSettings.tsx (0 lines diff - identical!)
- pages/settings/McpSettings.tsx (0 lines diff - identical!)
- pages/settings/SettingsLayout.tsx (0 lines diff - identical!)
- pages/settings/index.ts (7 lines diff)
- styles/index.css (787 lines diff - needs review but low priority)
- utils/companion-install-task.ts (12 lines diff)

DRIFT BUG CONCERNS
===================
1. navbar.tsx: Discord guild ID needs update to Forge guild (1095114867012292758)
2. GitHubLoginDialog.tsx: Modal flow pattern may have upstream bug fixes
3. GeneralSettings.tsx: Button pattern changes + OmniCard integration

NEW UPSTREAM FILES
==================
Result: 0 new files requiring overrides

REFACTORING APPROACH
====================
HIGH Priority (with upstream):
  1. git show v0.0.104-20251006165551:<upstream_path> > new_file.tsx
  2. diff -u new_file.tsx forge-overrides/frontend/src/<rel_path>
  3. Layer customizations with // FORGE CUSTOMIZATION comments
  4. cd frontend && pnpm run lint && pnpm exec tsc --noEmit

HIGH Priority (Forge-specific):
  1. cd frontend && pnpm run lint <file>
  2. cd frontend && pnpm exec tsc --noEmit
  3. Manual QA of Omni features

MEDIUM/LOW Priority:
  1. Compare with upstream
  2. Update if needed
  3. Verify lint passes

NEXT STEPS
==========
1. Human review and approval of this audit
2. Begin Tasks C-01 through C-25 (file-by-file refactoring)
3. Validate each file in isolation before integration
4. Full integration testing after all C-tasks complete
